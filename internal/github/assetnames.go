package github

import (
	"math/rand"

	nanoid "github.com/matoous/go-nanoid/v2"
)

var commonAssetNames = []string{
	"app-darwin-x64.dmg",
	"app-linux-x64.AppImage",
	"app-mac.zip",
	"app-setup-x64.exe",
	"app-win32-x64.exe",
	"app-win64.msi",
	"app.exe",
	"app.pkg",
	"app_amd64.deb",
	"app_arm64.deb",

	"archive.tar.gz",
	"binaries.zip",
	"bundle.tar.xz",
	"dist.zip",
	"package.tar.bz2",
	"release.7z",
	"source.zip",
	"build.zip",
	"artifacts.tar",
	"compressed.rar",

	"darwin-amd64",
	"linux-aarch64",
	"linux-arm64",
	"linux-armv7",
	"linux-x86_64",
	"macos-universal",
	"windows-386",
	"windows-amd64",
	"x86_64-unknown-linux-gnu",
	"x86_64-apple-darwin",

	"app-release.apk",
	"app-debug.apk",
	"app.ipa",
	"android-release.aab",
	"android-debug.apk",
	"ios-release.ipa",
	"mobile-release.apk",
	"mobile-debug.apk",
	"release-unsigned.apk",
	"signed-release.apk",

	"lib.so",
	"lib.dll",
	"lib.dylib",
	"module.jar",
	"package.gem",
	"plugin.so",
	"runtime.dll",
	"shared.so",
	"static.lib",
	"framework.dll",

	"docs.pdf",
	"manual.pdf",
	"reference.html",
	"changelog.md",
	"readme.txt",
	"guide.pdf",
	"documentation.zip",
	"assets.zip",
	"resources.tar.gz",
	"media.zip",

	"debug-symbols.pdb",
	"source-maps.zip",
	"headers.zip",
	"include.zip",
	"dev-tools.zip",
	"sdk.zip",
	"api-docs.zip",
	"examples.zip",
	"samples.zip",
	"templates.zip",

	"container.tar",
	"docker-image.tar",
	"vm-disk.vmdk",
	"virtual-appliance.ova",
	"image.iso",
	"disk-image.raw",
	"snapshot.qcow2",
	"backup.vdi",
	"system-image.img",
	"bootable.iso",

	"config.json",
	"settings.yaml",
	"data.db",
	"database.sql",
	"preferences.xml",
	"metadata.json",
	"schema.sql",
	"rules.yaml",
	"translations.json",
	"locales.zip",

	"extension.vsix",
	"plugin.jar",
	"addon.xpi",
	"module.npm",
	"package.pip",
	"component.crx",
	"widget.wgt",
	"theme.zip",
	"skin.zip",
	"mod.pak",

	"app-universal-binary",
	"app-cross-platform.zip",
	"multi-arch-bundle.tar.gz",
	"all-platforms.zip",
	"unified-release.zip",
	"portable-version.zip",
	"standalone-release.zip",
	"cross-compile-bundle.tar",
	"hybrid-package.zip",
	"platform-agnostic.zip",

	"python-wheel.whl",
	"node-module.tgz",
	"ruby-gem.gem",
	"java-bundle.jar",
	"perl-module.tar.gz",
	"php-package.phar",
	"rust-crate.crate",
	"golang-pkg.tar.gz",
	"dotnet-nuget.nupkg",
	"swift-package.swiftpm",

	"frontend-bundle.js",
	"styles.min.css",
	"web-assets.zip",
	"static-files.tar.gz",
	"website-bundle.zip",
	"spa-release.zip",
	"cdn-assets.zip",
	"web-components.zip",
	"client-bundle.js",
	"webapp-dist.zip",

	"test-suite.zip",
	"debug-build.zip",
	"testing-tools.tar.gz",
	"benchmark-suite.zip",
	"profiler-tools.zip",
	"coverage-report.zip",
	"performance-tests.zip",
	"unit-tests.zip",
	"integration-tests.zip",
	"stress-test-suite.zip",

	"checksums.txt",
	"signatures.asc",
	"pgp-keys.asc",
	"hash-verification.md",
	"security-bundle.zip",
	"encrypted-assets.zip",
	"certificate-bundle.zip",
	"key-store.jks",
	"trust-chain.pem",
	"signature-files.zip",

	"lambda-function.zip",
	"server-bundle.tar.gz",
	"cloud-function.zip",
	"deployment-package.zip",
	"serverless-bundle.zip",
	"microservice-build.zip",
	"cluster-config.tar.gz",
	"node-service.zip",
	"container-bundle.tar",
	"scaling-scripts.zip",

	"game-assets.pak",
	"textures.zip",
	"models-3d.zip",
	"sound-effects.zip",
	"level-data.bin",
	"animation-sets.zip",
	"shader-pack.zip",
	"particle-effects.zip",
	"game-maps.zip",
	"cutscenes.tar.gz",

	"model-weights.h5",
	"trained-model.pkl",
	"neural-network.pt",
	"dataset-bundle.zip",
	"feature-vectors.npz",
	"tensorflow-model.pb",
	"ml-pipeline.zip",
	"training-data.tar.gz",
	"inference-model.onnx",
	"embeddings.bin",

	"firmware.bin",
	"device-drivers.zip",
	"hardware-specs.pdf",
	"schematic-files.zip",
	"pcb-designs.zip",
	"protocol-definitions.xml",
	"sensor-configs.json",
	"device-profiles.yaml",
	"bootloader.img",
	"embedded-system.hex",

	"linter-rules.zip",
	"formatter-config.zip",
	"code-snippets.zip",
	"ide-plugins.zip",
	"build-tools.tar.gz",
	"compiler-extensions.zip",
	"analysis-tools.zip",
	"debugging-symbols.zip",
	"profiling-tools.tar.gz",
	"development-kit.zip",
}

func getRandomAssetName() string {
	randomIndex := int(rand.Int63n(int64(len(commonAssetNames))))
	assetName := commonAssetNames[randomIndex]

	return nanoid.Must() + assetName
}
